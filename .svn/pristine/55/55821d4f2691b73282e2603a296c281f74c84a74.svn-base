package rs.invado.wo.domain.ocp;
// Generated Dec 9, 2012 6:19:17 PM by Hibernate Tools 3.4.0.CR1


import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;
import rs.invado.wo.domain.prod.ProdPoreskaStopa;
import rs.invado.wo.domain.prod.ProdStavkaCenovnika;
import rs.invado.wo.domain.uz.UzStanjeZalihaSkladista;
import rs.invado.wo.domain.wo.WoArtikliNaAkciji;
import rs.invado.wo.domain.wo.WoRezervacija;

import javax.persistence.*;
import java.math.BigDecimal;
import java.sql.Blob;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * OcpProizvod generated by hbm2java
 */

@Entity
@Table(name = "OCP_PROIZVOD", schema = "DAREX"
)
@SqlResultSetMapping(name = "proizvodRecord", entities = {@EntityResult(entityClass = OcpProizvod.class, fields = {
        @FieldResult(name = "proizvod", column = "PROIZVOD#"),
        @FieldResult(name = "nazivProizvoda", column = "NAZIV_PROIZVODA"),
        @FieldResult(name = "rokVazenja", column = "ROK_VAZENJA"),
        @FieldResult(name = "datumOtv", column = "DATUM_OTV"),
        @FieldResult(name = "grupaProizvoda", column = "GRUPA_PROIZVODA#"),
        @FieldResult(name = "radnik", column = "RADNIK#"),
        @FieldResult(name = "jedinicaMere", column = "JEDINICA_MERE#"),
        @FieldResult(name = "dodatniNaziv", column = "DODATNI_NAZIV"),
        @FieldResult(name = "kodKb", column = "KOD_KB"),
        @FieldResult(name = "minNivoZaliha", column = "MIN_NIVO_ZALIHA"),
        @FieldResult(name = "maxNivoZaliha", column = "MAX_NIVO_ZALIHA"),
        @FieldResult(name = "optimalniNivoZaliha", column = "OPTIMALNI_NIVO_ZALIHA"),
        @FieldResult(name = "jmAktiviteta", column = "JM_AKTIVITETA"),
        @FieldResult(name = "kontinualnaPr", column = "KONTINUALNA_PR"),
        @FieldResult(name = "sledljivost", column = "SLEDLJIVOST"),
        @FieldResult(name = "kodPakovanja", column = "KOD_PAKOVANJA"),
        @FieldResult(name = "familijaRef", column = "FAMILIJA_REF"),
        @FieldResult(name = "nazivNaEngleskom", column = "NAZIV_NA_ENGLESKOM"),
        @FieldResult(name = "vremeNabavke", column = "VREME_NABAVKE"),
        @FieldResult(name = "vremeKontrole", column = "VREME_KONTROLE"),
        @FieldResult(name = "orderMinKolicina", column = "ORDER_MIN_KOLICINA"),
        @FieldResult(name = "orderMaxKolicina", column = "ORDER_MAX_KOLICINA"),
        @FieldResult(name = "overQuantityControl", column = "OVER_QUANTITY_CONTROL"),
        @FieldResult(name = "daysEarlyReceipt", column = "DAYS_EARLY_RECEIPT"),
        @FieldResult(name = "daysLateReceipt", column = "DAYS_LATE_RECEIPT"),
        @FieldResult(name = "receiptDateControl", column = "RECEIPT_DATE_CONTROL"),
        @FieldResult(name = "obrisaoRadnik", column = "OBRISAO_RADNIK#"),
        @FieldResult(name = "datumBrisanja", column = "DATUM_BRISANJA"),
        @FieldResult(name = "versionControl", column = "VERSION_CONTROL"),
        @FieldResult(name = "serialControl", column = "SERIAL_CONTROL"),
        @FieldResult(name = "jedinicaMereAltRef", column = "ID_JEDINICE_MERE_ALT_REF"),
        @FieldResult(name = "slika", column = "SLIKA"),
        @FieldResult(name = "datumKrajaAkcije", column = "DATUM_KRAJA_AKCIJE"),
        @FieldResult(name = "datumDekorMeseca", column = "DATUM_DEKOR_MESECA")})}
        , columns = {
        @ColumnResult(name = "cena"),
        @ColumnResult(name = "dezenIstruktira"),
        @ColumnResult(name = "proizvodjac"),
        @ColumnResult(name = "tipAkcije"),
        @ColumnResult(name = "kolicinaPoPakovanju"),
        @ColumnResult(name = "raspolozivo"),
        @ColumnResult(name = "punNazivProizvoda"),
        @ColumnResult(name = "maticnoSkladiste"),
        @ColumnResult(name = "kolUAltJM"),
        @ColumnResult(name = "stopaPoreza"),
        @ColumnResult(name = "sortKlasa")})
@NamedNativeQueries({
        @NamedNativeQuery(name = "findAllByBrandOrNamePatternAutoComplete",
                query = "  select p.PROIZVOD#,p.NAZIV_PROIZVODA,p.ROK_VAZENJA,p.DATUM_OTV,p.GRUPA_PROIZVODA#,p.RADNIK#,p.JEDINICA_MERE#,"
                        + " p.DODATNI_NAZIV ,p.KOD_KB,p.MIN_NIVO_ZALIHA,p.MAX_NIVO_ZALIHA,p.OPTIMALNI_NIVO_ZALIHA,p.JM_AKTIVITETA,p.KONTINUALNA_PR, "
                        + " p.SLEDLJIVOST,p.KOD_PAKOVANJA,p.FAMILIJA_REF,p.NAZIV_NA_ENGLESKOM,p.VREME_NABAVKE,      "
                        + "       p.VREME_KONTROLE,p.ORDER_MIN_KOLICINA,p.ORDER_MAX_KOLICINA,p.OVER_QUANTITY_CONTROL,p.DAYS_EARLY_RECEIPT,"
                        + "       p.DAYS_LATE_RECEIPT,p.RECEIPT_DATE_CONTROL,p.OBRISAO_RADNIK#,p.DATUM_BRISANJA,p.VERSION_CONTROL,p.SERIAL_CONTROL,p.DATUM_KRAJA_AKCIJE,p.DATUM_DEKOR_MESECA, "
                        + "       p.slika, p.ID_JEDINICE_MERE_ALT_REF,  null cena, null dezenIstruktira,"
                        + "        null proizvodjac, null tipAkcije, null kolicinaPoPakovanju, null raspolozivo, naziv_proizvoda||dodatni_naziv punNazivProizvoda, "
                        + "        null maticnoSkladiste, null kolUAltJM, null stopaPoreza, null sortKlasa  "
                        + " from Ocp_Proizvod p "
                        + " where ( :namePattern )"
                        + "  and exists (select 1 "
                        + "                   from wo_partner_settings w, uz_stanje_zaliha_skladista u"
                        + "                   where w.poslovni_partner# = :partner"
                        + "                   and w.id_kompanija_korisnik = :kompanija"
                        + "                   and w.id_skladista = u.id_skladista"
                        + "                   and u.proizvod# = p.proizvod# "
                        + "                   and u.kolicina_po_stanju_z - u.rezervisana_kol >0) "
                        + "  and (exists (select 1 from ocp_klasifikacija_proizvoda km"
                        + "                  where km.vrsta_klasifikacije# = :vrstaKlasifikacijeFilter"
                        + "                   and klasifikacija# like  :brand||'%'"
                        + "                   and km.proizvod# = p.proizvod#)"
                        + "           or :brand is null )"
                        + " order by punNazivProizvoda", resultSetMapping = "proizvodRecord"),
        @NamedNativeQuery(name = "findAllByBrandSorted",
                query = "  select p.PROIZVOD#,p.NAZIV_PROIZVODA,p.ROK_VAZENJA,p.DATUM_OTV,p.GRUPA_PROIZVODA#,p.RADNIK#,p.JEDINICA_MERE#,"
                        + " p.DODATNI_NAZIV ,p.KOD_KB,p.MIN_NIVO_ZALIHA,p.MAX_NIVO_ZALIHA,p.OPTIMALNI_NIVO_ZALIHA,p.JM_AKTIVITETA,p.KONTINUALNA_PR, "
                        + " p.SLEDLJIVOST,p.KOD_PAKOVANJA,p.FAMILIJA_REF,p.NAZIV_NA_ENGLESKOM,p.VREME_NABAVKE,      "
                        + "       p.VREME_KONTROLE,p.ORDER_MIN_KOLICINA,p.ORDER_MAX_KOLICINA,p.OVER_QUANTITY_CONTROL,p.DAYS_EARLY_RECEIPT,"
                        + "       p.DAYS_LATE_RECEIPT,p.RECEIPT_DATE_CONTROL,p.OBRISAO_RADNIK#,p.DATUM_BRISANJA,p.VERSION_CONTROL,p.SERIAL_CONTROL,p.DATUM_KRAJA_AKCIJE,p.DATUM_DEKOR_MESECA, "
                        + "       p.slika, p.ID_JEDINICE_MERE_ALT_REF,  null cena, null dezenIstruktira,"
                        + "        null proizvodjac, null tipAkcije, null kolicinaPoPakovanju, null raspolozivo, naziv_proizvoda||dodatni_naziv punNazivProizvoda, "
                        + "        null maticnoSkladiste, null kolUAltJM, null stopaPoreza, k.klasifikacija# sortKlasa  "
                        + " from Ocp_Proizvod p, ocp_klasifikacija_proizvoda k "
                        + " where exists (select 1 "
                        + "                   from wo_partner_settings w, uz_stanje_zaliha_skladista u"
                        + "                   where w.poslovni_partner# = :partner"
                        + "                   and w.id_kompanija_korisnik = :kompanija"
                        + "                   and w.id_skladista = u.id_skladista"
                        + "                   and u.proizvod# = p.proizvod# "
                        + "                   and u.kolicina_po_stanju_z - u.rezervisana_kol >0) "
                        + "    and k.vrsta_Klasifikacije# = :vrstaKlasifikacijeSort "
                        + "            and k.proizvod# = p.proizvod# "
                        + "  and exists (select 1 from ocp_klasifikacija_proizvoda km"
                        + "                  where km.vrsta_klasifikacije# = :vrstaKlasifikacijeMeni"
                        + "                   and klasifikacija# = :brand"
                        + "                   and km.proizvod# = p.proizvod#)"
                        + " order by sortKlasa, punNazivProizvoda ", resultSetMapping = "proizvodRecord"),
        @NamedNativeQuery(name = "findAllByBrandPriceSorted",
                query = "  select p.PROIZVOD#,p.NAZIV_PROIZVODA,p.ROK_VAZENJA,p.DATUM_OTV,p.GRUPA_PROIZVODA#,p.RADNIK#,p.JEDINICA_MERE#,"
                        + " p.DODATNI_NAZIV ,p.KOD_KB,p.MIN_NIVO_ZALIHA,p.MAX_NIVO_ZALIHA,p.OPTIMALNI_NIVO_ZALIHA,p.JM_AKTIVITETA,p.KONTINUALNA_PR, "
                        + " p.SLEDLJIVOST,p.KOD_PAKOVANJA,p.FAMILIJA_REF,p.NAZIV_NA_ENGLESKOM,p.VREME_NABAVKE,      "
                        + "       p.VREME_KONTROLE,p.ORDER_MIN_KOLICINA,p.ORDER_MAX_KOLICINA,p.OVER_QUANTITY_CONTROL,p.DAYS_EARLY_RECEIPT,"
                        + "       p.DAYS_LATE_RECEIPT,p.RECEIPT_DATE_CONTROL,p.OBRISAO_RADNIK#,p.DATUM_BRISANJA,p.VERSION_CONTROL,p.SERIAL_CONTROL,p.DATUM_KRAJA_AKCIJE,p.DATUM_DEKOR_MESECA, "
                        + "       p.slika, p.ID_JEDINICE_MERE_ALT_REF,  cs.cena cena, null dezenIstruktira,"
                        + "        null proizvodjac, null tipAkcije, null kolicinaPoPakovanju, null raspolozivo, naziv_proizvoda||dodatni_naziv punNazivProizvoda, "
                        + "        null maticnoSkladiste, null kolUAltJM, null stopaPoreza, null sortKlasa  "
                        + " from Ocp_Proizvod p, prod_cenovnik c, prod_stavka_cenovnika cs "
                        + " where exists (select 1 "
                        + "                   from wo_partner_settings w, uz_stanje_zaliha_skladista u"
                        + "                   where w.poslovni_partner# = :partner"
                        + "                   and w.id_kompanija_korisnik = :kompanija"
                        + "                   and w.id_skladista = u.id_skladista"
                        + "                   and u.proizvod# = p.proizvod# "
                        + "                   and u.kolicina_po_stanju_z - u.rezervisana_kol >0) "
                        + "    and c.organizaciona_jedinica# = :ojc "
                        + "     and c.id_klasa_cene = :klc "
                        + "     and c.id_cenovnik = :cenovnik "
                        + "     and c.datum_do is null "
                        + "     and c.datum_ov is not null "
                        + "     and c.organizaciona_jedinica# = cs.organizaciona_jedinica#"
                        + "     and c.id_klasa_cene = cs.id_klasa_cene "
                        + "     and c.id_cenovnik = cs.id_cenovnik"
                        + "     and cs.proizvod# = p.proizvod#  "
                        + "  and exists (select 1 from ocp_klasifikacija_proizvoda km"
                        + "                  where km.vrsta_klasifikacije# = :vrstaKlasifikacijeMeni"
                        + "                   and klasifikacija# = :brand"
                        + "                   and km.proizvod# = p.proizvod#)"
                        + " order by cs.cena, punNazivProizvoda ", resultSetMapping = "proizvodRecord"),
        @NamedNativeQuery(name = "findByActionTypePriceSorted",
                query = "  select p.PROIZVOD#,p.NAZIV_PROIZVODA,p.ROK_VAZENJA,p.DATUM_OTV,p.GRUPA_PROIZVODA#,p.RADNIK#,p.JEDINICA_MERE#,"
                        + " p.DODATNI_NAZIV ,p.KOD_KB,p.MIN_NIVO_ZALIHA,p.MAX_NIVO_ZALIHA,p.OPTIMALNI_NIVO_ZALIHA,p.JM_AKTIVITETA,p.KONTINUALNA_PR, "
                        + " p.SLEDLJIVOST,p.KOD_PAKOVANJA,p.FAMILIJA_REF,p.NAZIV_NA_ENGLESKOM,p.VREME_NABAVKE,      "
                        + "       p.VREME_KONTROLE,p.ORDER_MIN_KOLICINA,p.ORDER_MAX_KOLICINA,p.OVER_QUANTITY_CONTROL,p.DAYS_EARLY_RECEIPT,"
                        + "       p.DAYS_LATE_RECEIPT,p.RECEIPT_DATE_CONTROL,p.OBRISAO_RADNIK#,p.DATUM_BRISANJA,p.VERSION_CONTROL,p.SERIAL_CONTROL,p.DATUM_KRAJA_AKCIJE,p.DATUM_DEKOR_MESECA, "
                        + "       p.slika, p.ID_JEDINICE_MERE_ALT_REF,  cs.cena cena, null dezenIstruktira,"
                        + "        null proizvodjac, null tipAkcije, null kolicinaPoPakovanju, null raspolozivo, p.naziv_proizvoda||p.dodatni_naziv punNazivProizvoda, "
                        + "        null maticnoSkladiste, null kolUAltJM, null stopaPoreza, k.klasifikacija# sortKlasa  "
                        + " from Ocp_Proizvod p, prod_cenovnik c, prod_stavka_cenovnika cs, ocp_klasifikacija_proizvoda k "
                        + " where exists (select 1 from wo_artikli_na_akciji w"
                        + "                               where w.proizvod# = p.proizvod#"
                        + "                               and w.tip_akcije like '%'||:tipakcije||'%'"
                        + "                               and w.id_kompanije_korisnik = :kompanija"
                        + "                               and ( w.datum_do > sysdate or datum_do is null)) "
                        + "    and exists (select 1 "
                        + "                   from wo_partner_settings w, uz_stanje_zaliha_skladista u"
                        + "                   where w.poslovni_partner# = :partner"
                        + "                   and w.id_kompanija_korisnik = :kompanija"
                        + "                   and w.id_skladista = u.id_skladista"
                        + "                   and u.proizvod# = p.proizvod# "
                        + "                   and u.kolicina_po_stanju_z - u.rezervisana_kol >0) "
                        + "    and c.organizaciona_jedinica# = :ojc "
                        + "     and c.id_klasa_cene = :klc "
                        + "     and c.id_cenovnik = :cenovnik "
                        + "     and c.datum_do is null "
                        + "     and c.datum_ov is not null "
                        + "     and c.organizaciona_jedinica# = cs.organizaciona_jedinica#"
                        + "     and c.id_klasa_cene = cs.id_klasa_cene "
                        + "     and c.id_cenovnik = cs.id_cenovnik"
                        + "     and cs.proizvod# = p.proizvod#  "
                        + "    and k.vrsta_Klasifikacije# = :vrstaKlasifikacijeSort "
                        + "    and k.proizvod# = p.proizvod# "
                        + "   order by sortKlasa, cs.cena , punNazivProizvoda ", resultSetMapping = "proizvodRecord"),
        @NamedNativeQuery(name = "findByNamePriceSorted",
                query = "  select p.PROIZVOD#,p.NAZIV_PROIZVODA,p.ROK_VAZENJA,p.DATUM_OTV,p.GRUPA_PROIZVODA#,p.RADNIK#,p.JEDINICA_MERE#,"
                        + " p.DODATNI_NAZIV ,p.KOD_KB,p.MIN_NIVO_ZALIHA,p.MAX_NIVO_ZALIHA,p.OPTIMALNI_NIVO_ZALIHA,p.JM_AKTIVITETA,p.KONTINUALNA_PR, "
                        + " p.SLEDLJIVOST,p.KOD_PAKOVANJA,p.FAMILIJA_REF,p.NAZIV_NA_ENGLESKOM,p.VREME_NABAVKE,      "
                        + "       p.VREME_KONTROLE,p.ORDER_MIN_KOLICINA,p.ORDER_MAX_KOLICINA,p.OVER_QUANTITY_CONTROL,p.DAYS_EARLY_RECEIPT,"
                        + "       p.DAYS_LATE_RECEIPT,p.RECEIPT_DATE_CONTROL,p.OBRISAO_RADNIK#,p.DATUM_BRISANJA,p.VERSION_CONTROL,p.SERIAL_CONTROL,p.DATUM_KRAJA_AKCIJE,p.DATUM_DEKOR_MESECA, "
                        + "       p.slika, p.ID_JEDINICE_MERE_ALT_REF,  cs.cena cena, null dezenIstruktira,"
                        + "        null proizvodjac, null tipAkcije, null kolicinaPoPakovanju, null raspolozivo, p.naziv_proizvoda||p.dodatni_naziv punNazivProizvoda, "
                        + "        null maticnoSkladiste, null kolUAltJM, null stopaPoreza, null sortKlasa  "
                        + " from Ocp_Proizvod p, prod_cenovnik c, prod_stavka_cenovnika cs "
                        + " where (lower(naziv_proizvoda) like '%'||lower(:namePattern)||'%'"
                        + "           or lower(dodatni_naziv) like '%'||lower(:namePattern)||'%')"
                        + "    and exists (select 1 "
                        + "                   from wo_partner_settings w, uz_stanje_zaliha_skladista u"
                        + "                   where w.poslovni_partner# = :partner"
                        + "                   and w.id_kompanija_korisnik = :kompanija"
                        + "                   and w.id_skladista = u.id_skladista"
                        + "                   and u.proizvod# = p.proizvod# "
                        + "                   and u.kolicina_po_stanju_z - u.rezervisana_kol >0) "
                        + "    and c.organizaciona_jedinica# = :ojc "
                        + "     and c.id_klasa_cene = :klc "
                        + "     and c.id_cenovnik = :cenovnik "
                        + "     and c.datum_do is null "
                        + "     and c.datum_ov is not null "
                        + "     and c.organizaciona_jedinica# = cs.organizaciona_jedinica#"
                        + "     and c.id_klasa_cene = cs.id_klasa_cene "
                        + "     and c.id_cenovnik = cs.id_cenovnik"
                        + "     and cs.proizvod# = p.proizvod#  "
                        + "   order by cs.cena, punNazivProizvoda ", resultSetMapping = "proizvodRecord"),
        @NamedNativeQuery(name = "findAllByBrandOrNamePriceSorted",
                query = "  select p.PROIZVOD#,p.NAZIV_PROIZVODA,p.ROK_VAZENJA,p.DATUM_OTV,p.GRUPA_PROIZVODA#,p.RADNIK#,p.JEDINICA_MERE#,"
                        + " p.DODATNI_NAZIV ,p.KOD_KB,p.MIN_NIVO_ZALIHA,p.MAX_NIVO_ZALIHA,p.OPTIMALNI_NIVO_ZALIHA,p.JM_AKTIVITETA,p.KONTINUALNA_PR, "
                        + " p.SLEDLJIVOST,p.KOD_PAKOVANJA,p.FAMILIJA_REF,p.NAZIV_NA_ENGLESKOM,p.VREME_NABAVKE,      "
                        + "       p.VREME_KONTROLE,p.ORDER_MIN_KOLICINA,p.ORDER_MAX_KOLICINA,p.OVER_QUANTITY_CONTROL,p.DAYS_EARLY_RECEIPT,"
                        + "       p.DAYS_LATE_RECEIPT,p.RECEIPT_DATE_CONTROL,p.OBRISAO_RADNIK#,p.DATUM_BRISANJA,p.VERSION_CONTROL,p.SERIAL_CONTROL,p.DATUM_KRAJA_AKCIJE,p.DATUM_DEKOR_MESECA, "
                        + "       p.slika, p.ID_JEDINICE_MERE_ALT_REF,  cs.cena cena, null dezenIstruktira,"
                        + "        null proizvodjac, null tipAkcije, null kolicinaPoPakovanju, null raspolozivo, naziv_proizvoda||dodatni_naziv punNazivProizvoda, "
                        + "        null maticnoSkladiste, null kolUAltJM, null stopaPoreza, null sortKlasa  "
                        + " from Ocp_Proizvod p, prod_cenovnik c, prod_stavka_cenovnika cs "
                        + " where (lower(naziv_proizvoda) like '%'||lower(:namePattern)||'%'"
                        + "           or lower(dodatni_naziv) like '%'||lower(:namePattern)||'%')"
                        + "  and exists (select 1 "
                        + "                   from wo_partner_settings w, uz_stanje_zaliha_skladista u"
                        + "                   where w.poslovni_partner# = :partner"
                        + "                   and w.id_kompanija_korisnik = :kompanija"
                        + "                   and w.id_skladista = u.id_skladista"
                        + "                   and u.proizvod# = p.proizvod# "
                        + "                   and u.kolicina_po_stanju_z - u.rezervisana_kol >0) "
                        + "    and c.organizaciona_jedinica# = :ojc "
                        + "     and c.id_klasa_cene = :klc "
                        + "     and c.id_cenovnik = :cenovnik "
                        + "     and c.datum_do is null "
                        + "     and c.datum_ov is not null "
                        + "     and c.organizaciona_jedinica# = cs.organizaciona_jedinica#"
                        + "     and c.id_klasa_cene = cs.id_klasa_cene "
                        + "     and c.id_cenovnik = cs.id_cenovnik"
                        + "     and cs.proizvod# = p.proizvod#  "
                        + "  and (exists (select 1 from ocp_klasifikacija_proizvoda km"
                        + "                  where km.vrsta_klasifikacije# = :vrstaKlasifikacijeMeni"
                        + "                   and klasifikacija# like  :brand||'%'"
                        + "                   and km.proizvod# = p.proizvod#)"
                        + "           or :brand is null )"
                        + " order by cs.cena, punNazivProizvoda ", resultSetMapping = "proizvodRecord"),

        @NamedNativeQuery(name = "findAllByBrandOrNameAutoComplete",
                query = "  select p.PROIZVOD#,p.NAZIV_PROIZVODA,p.ROK_VAZENJA,p.DATUM_OTV,p.GRUPA_PROIZVODA#,p.RADNIK#,p.JEDINICA_MERE#,"
                        + " p.DODATNI_NAZIV ,p.KOD_KB,p.MIN_NIVO_ZALIHA,p.MAX_NIVO_ZALIHA,p.OPTIMALNI_NIVO_ZALIHA,p.JM_AKTIVITETA,p.KONTINUALNA_PR, "
                        + " p.SLEDLJIVOST,p.KOD_PAKOVANJA,p.FAMILIJA_REF,p.NAZIV_NA_ENGLESKOM,p.VREME_NABAVKE,      "
                        + "       p.VREME_KONTROLE,p.ORDER_MIN_KOLICINA,p.ORDER_MAX_KOLICINA,p.OVER_QUANTITY_CONTROL,p.DAYS_EARLY_RECEIPT,"
                        + "       p.DAYS_LATE_RECEIPT,p.RECEIPT_DATE_CONTROL,p.OBRISAO_RADNIK#,p.DATUM_BRISANJA,p.VERSION_CONTROL,p.SERIAL_CONTROL,p.DATUM_KRAJA_AKCIJE,p.DATUM_DEKOR_MESECA, "
                        + "       p.slika, p.ID_JEDINICE_MERE_ALT_REF,  null cena, null dezenIstruktira,"
                        + "        null proizvodjac, null tipAkcije, null kolicinaPoPakovanju, null raspolozivo, naziv_proizvoda||dodatni_naziv punNazivProizvoda, "
                        + "        null maticnoSkladiste, null kolUAltJM, null stopaPoreza, null sortKlasa  "
                        + " from Ocp_Proizvod p "
                        + " where (lower(naziv_proizvoda) like '%'||lower(:namePattern)||'%'"
                        + "           or lower(dodatni_naziv) like '%'||lower(:namePattern)||'%')"
                        + "  and exists (select 1 "
                        + "                   from wo_partner_settings w, uz_stanje_zaliha_skladista u"
                        + "                   where w.poslovni_partner# = :partner"
                        + "                   and w.id_kompanija_korisnik = :kompanija"
                        + "                   and w.id_skladista = u.id_skladista"
                        + "                   and u.proizvod# = p.proizvod# "
                        + "                   and u.kolicina_po_stanju_z - u.rezervisana_kol >0) "
                        + "  and (exists (select 1 from ocp_klasifikacija_proizvoda km"
                        + "                  where km.vrsta_klasifikacije# = :vrstaKlasifikacijeFilter"
                        + "                   and klasifikacija# like  :brand||'%'"
                        + "                   and km.proizvod# = p.proizvod#)"
                        + "           or :brand is null )"
                        + " order by punNazivProizvoda", resultSetMapping = "proizvodRecord"),
        @NamedNativeQuery(name = "stopaPoreza",
                query = "  select ps.* " +
                        "  from     prod_proizvod_pk p, prod_poreska_klasa pk, prod_poreska_stopa ps," +
                        "    prod_por_klasa_vrsta_por pkvp, prod_vrsta_poreza vp" +
                        "  where p.proizvod# = :proizvod" +
                        "    and p.organizaciona_jedinica# = :oj" +
                        "    and pk.poreska_klasa# = p.poreska_klasa#" +
                        "    and pkvp.poreska_klasa# = pk.poreska_klasa#" +
                        "    and pkvp.datum_do is null" +
                        "    and vp.vrsta_poreza# = pkvp.vrsta_poreza#" +
                        "    and ps.vrsta_poreza# = vp.vrsta_poreza#  -- uslov koji je dodat 17.10.2012 da ne bi sumirao sve vrste poreza\n" +
                        "    and ps.datum_do is null", resultClass = ProdPoreskaStopa.class)})


public class OcpProizvod implements java.io.Serializable {

    private Integer proizvod;
    private String nazivProizvoda;
    private Byte rokVazenja;
    private Date datumOtv;
    private String grupaProizvoda;
    private Integer radnik;
    private OcpJedinicaMere jedinicaMere;
    private String dodatniNaziv;
    private String kodKb;
    private BigDecimal minNivoZaliha;
    private BigDecimal maxNivoZaliha;
    private BigDecimal optimalniNivoZaliha;
    private Short jmAktiviteta;
    private String kontinualnaPr;
    private String sledljivost;
    private String kodPakovanja;
    private Integer familijaRef;
    private String nazivNaEngleskom;
    private Short vremeNabavke;
    private Short vremeKontrole;
    private BigDecimal orderMinKolicina;
    private BigDecimal orderMaxKolicina;
    private Short overQuantityControl;
    private Short daysEarlyReceipt;
    private Short daysLateReceipt;
    private String receiptDateControl;
    private Integer obrisaoRadnik;
    private Date datumBrisanja;
    private String versionControl;
    private String serialControl;
    private OcpJedinicaMere jedinicaMereAltRef;
    private Blob slika;
    private Date datumKrajaAkcije;
    private Date datumDekorMeseca;

    //Transient
    private BigDecimal cena;
    private String dezenIstruktira;
    private String proizvodjac;
    private String tipAkcije;
    private BigDecimal kolicinaPoPakovanju;
    private BigDecimal raspolozivo;
    private String punNazivProizvoda;
    private int maticnoSkladiste;
    private Integer kolUAltJM;
    private BigDecimal stopaPoreza;
    private String sortKlasa;
    private Boolean primeniJsklPakovanje;
    private List<BigDecimal> jsklPakovanja = new ArrayList<BigDecimal>(0);
    private BigDecimal raspolozivoPerPak;


    private transient List<ProdStavkaCenovnika> cene = new ArrayList<ProdStavkaCenovnika>(0);
    private transient List<OcpKlasifikacijaProizvoda> ocpKlasifikacijaProizvoda = new ArrayList<OcpKlasifikacijaProizvoda>(0);
    private transient List<WoArtikliNaAkciji> woArtikliNaAkcijis = new ArrayList<WoArtikliNaAkciji>(0);
    private transient List<UzStanjeZalihaSkladista> uzStanjeZalihaSkladistas = new ArrayList<UzStanjeZalihaSkladista>(0);
    private transient List<WoRezervacija> woRezervacijas = new ArrayList<WoRezervacija>(0);


    public OcpProizvod() {

    }

    @Id
    @Column(name = "PROIZVOD#", unique = true, nullable = false, precision = 7, scale = 0)
    public Integer getProizvod() {
        return this.proizvod;
    }

    public void setProizvod(Integer proizvod) {
        this.proizvod = proizvod;
    }


    @Column(name = "NAZIV_PROIZVODA", length = 50)
    public String getNazivProizvoda() {
        return this.nazivProizvoda;
    }

    public void setNazivProizvoda(String nazivProizvoda) {
        this.nazivProizvoda = nazivProizvoda;
    }


    @Column(name = "ROK_VAZENJA", precision = 2, scale = 0)
    public Byte getRokVazenja() {
        return this.rokVazenja;
    }

    public void setRokVazenja(Byte rokVazenja) {
        this.rokVazenja = rokVazenja;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "DATUM_OTV", length = 7)
    public Date getDatumOtv() {
        return this.datumOtv;
    }

    public void setDatumOtv(Date datumOtv) {
        this.datumOtv = datumOtv;
    }


    @Column(name = "GRUPA_PROIZVODA#", length = 15)
    public String getGrupaProizvoda() {
        return this.grupaProizvoda;
    }

    public void setGrupaProizvoda(String grupaProizvoda) {
        this.grupaProizvoda = grupaProizvoda;
    }


    @Column(name = "RADNIK#", precision = 6, scale = 0)
    public Integer getRadnik() {
        return this.radnik;
    }

    public void setRadnik(Integer radnik) {
        this.radnik = radnik;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "JEDINICA_MERE#", referencedColumnName = "ID_JEDINICE_MERE", insertable = true, updatable = true, nullable = false)
    public OcpJedinicaMere getJedinicaMere() {
        return jedinicaMere;
    }

    public void setJedinicaMere(OcpJedinicaMere jedinicaMere) {
        this.jedinicaMere = jedinicaMere;
    }


    @Column(name = "DODATNI_NAZIV")
    public String getDodatniNaziv() {
        return this.dodatniNaziv;
    }

    public void setDodatniNaziv(String dodatniNaziv) {
        this.dodatniNaziv = dodatniNaziv;
    }


    @Column(name = "KOD_KB", nullable = false, length = 1)
    public String getKodKb() {
        return this.kodKb;
    }

    public void setKodKb(String kodKb) {
        this.kodKb = kodKb;
    }


    @Column(name = "MIN_NIVO_ZALIHA", precision = 18, scale = 3)
    public BigDecimal getMinNivoZaliha() {
        return this.minNivoZaliha;
    }

    public void setMinNivoZaliha(BigDecimal minNivoZaliha) {
        this.minNivoZaliha = minNivoZaliha;
    }


    @Column(name = "MAX_NIVO_ZALIHA", precision = 18, scale = 3)
    public BigDecimal getMaxNivoZaliha() {
        return this.maxNivoZaliha;
    }

    public void setMaxNivoZaliha(BigDecimal maxNivoZaliha) {
        this.maxNivoZaliha = maxNivoZaliha;
    }


    @Column(name = "OPTIMALNI_NIVO_ZALIHA", precision = 18, scale = 3)
    public BigDecimal getOptimalniNivoZaliha() {
        return this.optimalniNivoZaliha;
    }

    public void setOptimalniNivoZaliha(BigDecimal optimalniNivoZaliha) {
        this.optimalniNivoZaliha = optimalniNivoZaliha;
    }


    @Column(name = "JM_AKTIVITETA", precision = 3, scale = 0)
    public Short getJmAktiviteta() {
        return this.jmAktiviteta;
    }

    public void setJmAktiviteta(Short jmAktiviteta) {
        this.jmAktiviteta = jmAktiviteta;
    }


    @Column(name = "KONTINUALNA_PR", length = 1)
    public String getKontinualnaPr() {
        return this.kontinualnaPr;
    }

    public void setKontinualnaPr(String kontinualnaPr) {
        this.kontinualnaPr = kontinualnaPr;
    }


    @Column(name = "SLEDLJIVOST", length = 1)
    public String getSledljivost() {
        return this.sledljivost;
    }

    public void setSledljivost(String sledljivost) {
        this.sledljivost = sledljivost;
    }


    @Column(name = "KOD_PAKOVANJA", length = 1)
    public String getKodPakovanja() {
        return this.kodPakovanja;
    }

    public void setKodPakovanja(String kodPakovanja) {
        this.kodPakovanja = kodPakovanja;
    }


    @Column(name = "FAMILIJA_REF", precision = 7, scale = 0)
    public Integer getFamilijaRef() {
        return this.familijaRef;
    }

    public void setFamilijaRef(Integer familijaRef) {
        this.familijaRef = familijaRef;
    }


    @Column(name = "NAZIV_NA_ENGLESKOM", length = 100)
    public String getNazivNaEngleskom() {
        return this.nazivNaEngleskom;
    }

    public void setNazivNaEngleskom(String nazivNaEngleskom) {
        this.nazivNaEngleskom = nazivNaEngleskom;
    }


    @Column(name = "VREME_NABAVKE", precision = 3, scale = 0)
    public Short getVremeNabavke() {
        return this.vremeNabavke;
    }

    public void setVremeNabavke(Short vremeNabavke) {
        this.vremeNabavke = vremeNabavke;
    }


    @Column(name = "VREME_KONTROLE", precision = 3, scale = 0)
    public Short getVremeKontrole() {
        return this.vremeKontrole;
    }

    public void setVremeKontrole(Short vremeKontrole) {
        this.vremeKontrole = vremeKontrole;
    }


    @Column(name = "ORDER_MIN_KOLICINA", precision = 18, scale = 3)
    public BigDecimal getOrderMinKolicina() {
        return this.orderMinKolicina;
    }

    public void setOrderMinKolicina(BigDecimal orderMinKolicina) {
        this.orderMinKolicina = orderMinKolicina;
    }


    @Column(name = "ORDER_MAX_KOLICINA", precision = 18, scale = 3)
    public BigDecimal getOrderMaxKolicina() {
        return this.orderMaxKolicina;
    }

    public void setOrderMaxKolicina(BigDecimal orderMaxKolicina) {
        this.orderMaxKolicina = orderMaxKolicina;
    }


    @Column(name = "OVER_QUANTITY_CONTROL", precision = 3, scale = 0)
    public Short getOverQuantityControl() {
        return this.overQuantityControl;
    }

    public void setOverQuantityControl(Short overQuantityControl) {
        this.overQuantityControl = overQuantityControl;
    }


    @Column(name = "DAYS_EARLY_RECEIPT", precision = 3, scale = 0)
    public Short getDaysEarlyReceipt() {
        return this.daysEarlyReceipt;
    }

    public void setDaysEarlyReceipt(Short daysEarlyReceipt) {
        this.daysEarlyReceipt = daysEarlyReceipt;
    }


    @Column(name = "DAYS_LATE_RECEIPT", precision = 3, scale = 0)
    public Short getDaysLateReceipt() {
        return this.daysLateReceipt;
    }

    public void setDaysLateReceipt(Short daysLateReceipt) {
        this.daysLateReceipt = daysLateReceipt;
    }


    @Column(name = "RECEIPT_DATE_CONTROL", length = 20)
    public String getReceiptDateControl() {
        return this.receiptDateControl;
    }

    public void setReceiptDateControl(String receiptDateControl) {
        this.receiptDateControl = receiptDateControl;
    }


    @Column(name = "OBRISAO_RADNIK#", precision = 6, scale = 0)
    public Integer getObrisaoRadnik() {
        return this.obrisaoRadnik;
    }

    public void setObrisaoRadnik(Integer obrisaoRadnik) {
        this.obrisaoRadnik = obrisaoRadnik;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "DATUM_BRISANJA", length = 7)
    public Date getDatumBrisanja() {
        return this.datumBrisanja;
    }

    public void setDatumBrisanja(Date datumBrisanja) {
        this.datumBrisanja = datumBrisanja;
    }


    @Column(name = "VERSION_CONTROL", length = 2)
    public String getVersionControl() {
        return this.versionControl;
    }

    public void setVersionControl(String versionControl) {
        this.versionControl = versionControl;
    }

    @ManyToOne(targetEntity = OcpJedinicaMere.class, fetch = FetchType.EAGER)
    @JoinColumn(name = "ID_JEDINICE_MERE_ALT_REF", referencedColumnName = "ID_JEDINICE_MERE", insertable = true, updatable = true, nullable = false)
    public OcpJedinicaMere getJedinicaMereAltRef() {
        return jedinicaMereAltRef;
    }

    public void setJedinicaMereAltRef(OcpJedinicaMere jedinicaMereAltRef) {
        this.jedinicaMereAltRef = jedinicaMereAltRef;
    }

    @Column(name = "SERIAL_CONTROL", length = 2)
    public String getSerialControl() {
        return this.serialControl;
    }

    public void setSerialControl(String serialControl) {
        this.serialControl = serialControl;
    }

    @Column(name = "SLIKA")
    public Blob getSlika() {
        return slika;
    }

    public void setSlika(Blob slika) {
        this.slika = slika;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "DATUM_KRAJA_AKCIJE", length = 7)
    public Date getDatumKrajaAkcije() {
        return this.datumKrajaAkcije;
    }

    public void setDatumKrajaAkcije(Date datumKrajaAkcije) {
        this.datumKrajaAkcije = datumKrajaAkcije;
    }


    @Temporal(TemporalType.DATE)
    @Column(name = "DATUM_DEKOR_MESECA", length = 7)
    public Date getDatumDekorMeseca() {
        return this.datumDekorMeseca;
    }

    public void setDatumDekorMeseca(Date datumDekorMeseca) {
        this.datumDekorMeseca = datumDekorMeseca;
    }


    @Transient
    public BigDecimal getCena() {
        return cena;
    }

    public void setCena(BigDecimal cena) {
        this.cena = cena;
    }

    @Transient
    public String getTipAkcije() {
        return tipAkcije;
    }

    public void setTipAkcije(String tipAkcije) {
        this.tipAkcije = tipAkcije;
    }

    @Transient
    public String getDezenIstruktira() {
        return this.dezenIstruktira;
    }

    public void setDezenIstruktira(String dezenIstruktira) {

        this.dezenIstruktira = dezenIstruktira;

    }

    @Transient
    public String getProizvodjac() {
        return proizvodjac;
    }

    public void setProizvodjac(String proizvodjac) {

        this.proizvodjac = proizvodjac;
    }


    @Transient
    public BigDecimal getKolicinaPoPakovanju() {
        return kolicinaPoPakovanju;
    }

    public void setKolicinaPoPakovanju(BigDecimal kolicinaPoPakovanju) {
        this.kolicinaPoPakovanju = kolicinaPoPakovanju;
    }

    @Transient
    public BigDecimal getRaspolozivo() {
        return raspolozivo;
    }

    public void setRaspolozivo(BigDecimal raspolozivo) {
        this.raspolozivo = raspolozivo;
    }

    //@Formula(("concat(naziv_proizvoda, dodatni_naziv)"))
    @Transient
    public String getPunNazivProizvoda() {
        return punNazivProizvoda;
    }

    public void setPunNazivProizvoda(String punNazivProizvoda) {
        this.punNazivProizvoda = punNazivProizvoda;
    }

    @Transient
    public int getMaticnoSkladiste() {
        return maticnoSkladiste;
    }

    public void setMaticnoSkladiste(int maticnoSkladiste) {
        this.maticnoSkladiste = maticnoSkladiste;
    }

    @Transient
    public Integer getKolUAltJM() {
        return kolUAltJM;
    }

    public void setKolUAltJM(Integer kolUAltJM) {
        this.kolUAltJM = kolUAltJM;
    }

    @Transient
    public BigDecimal getStopaPoreza() {
        return stopaPoreza;
    }

    public void setStopaPoreza(BigDecimal stopaPoreza) {
        this.stopaPoreza = stopaPoreza;
    }

    @Transient
    public String getSortKlasa() {
        return sortKlasa;
    }

    public void setSortKlasa(String sortKlasa) {
        this.sortKlasa = sortKlasa;
    }

    @Transient
    public List<BigDecimal> getJsklPakovanja() {
        return jsklPakovanja;
    }

    public void setJsklPakovanja(List<BigDecimal> jsklPakovanja) {
        this.jsklPakovanja = jsklPakovanja;
    }

    @Transient
    public Boolean getPrimeniJsklPakovanje() {
        return primeniJsklPakovanje;
    }

    public void setPrimeniJsklPakovanje(Boolean primeniJsklPakovanje) {
        this.primeniJsklPakovanje = primeniJsklPakovanje;
    }

    @Transient
    public BigDecimal getRaspolozivoPerPak() {
        return raspolozivoPerPak;
    }

    public void setRaspolozivoPerPak(BigDecimal raspolozivoPerPak) {
        this.raspolozivoPerPak = raspolozivoPerPak;
    }
    @OneToMany(targetEntity = ProdStavkaCenovnika.class, fetch = FetchType.LAZY, mappedBy = "ocpProizvod")
    public List<ProdStavkaCenovnika> getCene() {
        return this.cene;
    }

    public void setCene(List<ProdStavkaCenovnika> cene) {
        this.cene = cene;
    }

    @OneToMany(targetEntity = OcpKlasifikacijaProizvoda.class, mappedBy = "ocpProizvod")
    @LazyCollection(LazyCollectionOption.FALSE)
    public List<OcpKlasifikacijaProizvoda> getOcpKlasifikacijaProizvoda() {
        return ocpKlasifikacijaProizvoda;
    }


    public void setOcpKlasifikacijaProizvoda(List<OcpKlasifikacijaProizvoda> ocpKlasifikacijaProizvoda) {
        this.ocpKlasifikacijaProizvoda = ocpKlasifikacijaProizvoda;
    }

    @OneToMany(targetEntity = WoArtikliNaAkciji.class, fetch = FetchType.LAZY, mappedBy = "ocpProizvod")
    public List<WoArtikliNaAkciji> getWoArtikliNaAkcijis() {
        return woArtikliNaAkcijis;
    }

    public void setWoArtikliNaAkcijis(List<WoArtikliNaAkciji> woArtikliNaAkcijis) {
        this.woArtikliNaAkcijis = woArtikliNaAkcijis;
    }

    @OneToMany(targetEntity = UzStanjeZalihaSkladista.class, mappedBy = "ocpProizvod")
    @LazyCollection(LazyCollectionOption.FALSE)
    public List<UzStanjeZalihaSkladista> getUzStanjeZalihaSkladistas() {
        return uzStanjeZalihaSkladistas;
    }

    public void setUzStanjeZalihaSkladistas(List<UzStanjeZalihaSkladista> uzStanjeZalihaSkladistas) {
        this.uzStanjeZalihaSkladistas = uzStanjeZalihaSkladistas;
    }

    @OneToMany(targetEntity = WoRezervacija.class, fetch = FetchType.LAZY, mappedBy = "proizvod")
    public List<WoRezervacija> getWoRezervacijas() {
        return woRezervacijas;
    }

    public void setWoRezervacijas(List<WoRezervacija> woRezervacijas) {
        this.woRezervacijas = woRezervacijas;
    }


}


